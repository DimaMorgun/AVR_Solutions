
MAS.MCU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000004a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000009e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000009e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000010c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000415  00000000  00000000  00000134  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ad  00000000  00000000  00000549  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000200  00000000  00000000  000008f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000af8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002d3  00000000  00000000  00000b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00000dff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	05 d0       	rcall	.+10     	; 0x28 <main>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <_Z17PinInitializationv>:

#include <avr/io.h>

void PinInitialization()
{
	DDRB = 0b001000;
  22:	88 e0       	ldi	r24, 0x08	; 8
  24:	87 bb       	out	0x17, r24	; 23
  26:	08 95       	ret

00000028 <main>:
}

int main(void)
{
	PinInitialization();
  28:	fc df       	rcall	.-8      	; 0x22 <_Z17PinInitializationv>
		
		//Clear
		//PORTB &= ~(1<<3);
		
		//Toggle
		PORTB ^= (1<<3);
  2a:	98 b3       	in	r25, 0x18	; 24
  2c:	88 e0       	ldi	r24, 0x08	; 8
  2e:	89 27       	eor	r24, r25
  30:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  32:	2f e3       	ldi	r18, 0x3F	; 63
  34:	8d e0       	ldi	r24, 0x0D	; 13
  36:	93 e0       	ldi	r25, 0x03	; 3
  38:	21 50       	subi	r18, 0x01	; 1
  3a:	80 40       	sbci	r24, 0x00	; 0
  3c:	90 40       	sbci	r25, 0x00	; 0
  3e:	e1 f7       	brne	.-8      	; 0x38 <main+0x10>
  40:	00 c0       	rjmp	.+0      	; 0x42 <__DATA_REGION_LENGTH__+0x2>
  42:	00 00       	nop
  44:	f2 cf       	rjmp	.-28     	; 0x2a <main+0x2>

00000046 <_exit>:
  46:	f8 94       	cli

00000048 <__stop_program>:
  48:	ff cf       	rjmp	.-2      	; 0x48 <__stop_program>
